// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for integration_tokens
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-01-09, STEPS: `20`, REPEAT: 100000, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("phoenix-dev"), DB CACHE: 128

// Executed Command:

// ./target/release/bholdus

// benchmark

// --chain

// phoenix-dev

// --execution

// wasm

// --wasm-execution

// compiled

// --pallet

// integration-tokens

// --extrinsic

// *

// --steps

// 20

// --repeat

// 100000

// --raw

// --output

// ./pallets/pallet-integration/tokens/src/weights.rs

// --template

// ./.maintain/frame-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for integration_tokens.
pub trait WeightInfo {
	
	fn transfer() -> Weight;
	
}

/// Weights for integration_tokens using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {

	
	
	fn transfer() -> Weight {
		(19_729_000 as Weight)
			
			
			
			
			
	}
	
}

// For backwards compatibility and tests
impl WeightInfo for () {
	
	
	fn transfer() -> Weight {
		(19_729_000 as Weight)
			
			
			
			
			
	}
	
}