initSidebarItems({"constant":[["TEN_MB_SIZE_BYTES","Ten megabytes."]],"derive":[["Serialize",""]],"enum":[["FrontToBack","Message that the Client can send to the background task."],["JsonValue","Represents any valid JSON value."],["SubscriptionKind","Subscription kind"]],"fn":[["to_json_value","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data."]],"mod":[["error","Shared error type."],["traits","Traits"],["v2","JSON-RPC 2.0 specification related types v2."]],"struct":[["BatchMessage","Batch request message."],["JsonRawValue","Reference to a range of bytes encompassing a single valid JSON value in the input data."],["RegisterNotificationMessage","RegisterNotification message."],["RequestMessage","Request message."],["Subscription","Active subscription on the client."],["SubscriptionMessage","Subscription message."]],"trait":[["DeserializeOwned","A data structure that can be deserialized without borrowing any data from the deserializer."],["Serialize","A data structure that can be serialized into any data format supported by Serde."]],"type":[["Cow","Compact three word `Cow` that puts the ownership tag in capacity. This is a type alias, for documentation see `beef::generic::Cow`."]]});